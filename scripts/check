#!/bin/bash
#
# Multiple checks with notification by email or SMS
#
# Depends on: date, stat, rm, touch, cat, sed, awk, tr, alert, transmission-remote
# Runs on Cubietruck with sunxi kernel (/sys/class/power checks)
#

PATH=/usr/local/sbin:/usr/local/bin:$PATH
SCRIPT='check'
LOG="/var/log/$SCRIPT.log"
SPOOL="/var/spool/$SCRIPT"
ALERT='/usr/local/bin/alert'

CPU_CHECK=1
CPU_LOW=45
CPU_HIGH=55
CPU_FLAG="$SPOOL/cpu_flag"
CPU_TRES=3600
CPU_TRES_FILE="$SPOOL/cpu_tres"

AC_CHECK=1
AC_FILE='/sys/class/power_supply/ac/uevent'
AC_FLAG="$SPOOL/ac_flag"

BATTERY_CHECK=1
BATTERY_FILE='/sys/class/power_supply/battery/uevent'
BATTERY_LOW=10
BATTERY_HIGH=100
BATTERY_FLAG="$SPOOL/battery_flag"

TRANSMISSION_CHECK=1
TRANSMISSION_REMOTE='/usr/bin/transmission-remote'
TRANSMISSION_NAME_TRUNK=18

[ ! -d "$SPOOL" -o ! -w "$SPOOL" ] && exit 1

logg() {
  echo "$(date '+%F %T') $1" >>$LOG
}

alert() {

  logg "$1"
  $ALERT "$SCRIPT" "$1"

}

check_cpu() {

  if [ -r "$CPU_TRES_FILE" ]; then
    let D=$(date +%s)-$(stat --format=%Y $CPU_TRES_FILE)
    if [ $D -ge $CPU_TRES ]; then
      rm -f $CPU_TRES_FILE
      logg "rm $CPU_TRES_FILE"
    else
      return 0
    fi
  fi

  let T=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/temp1_input)/1000
  [ $? -gt 0 ] && return 1

  if [ $T -gt $CPU_HIGH -a ! -r "$CPU_FLAG" ]; then
    alert "CPU overheat ($T)"
    touch "$CPU_FLAG"
    logg "touch $CPU_FLAG"
  elif [ $T -lt $CPU_LOW -a -r "$CPU_FLAG" ]; then
    alert "CPU norm ($T)"
    rm -f "$CPU_FLAG"
    logg "rm $CPU_FLAG"
    touch "$CPU_TRES_FILE"
    logg "touch $CPU_TRES_FILE"
  fi

  return 0

}

check_ac() {

  AC_STATUS=$(cat $AC_FILE 2>/dev/null | sed -e '/^POWER_SUPPLY_ONLINE=/!d; s///')

  [ -z "$AC_STATUS" ] && return 1

  if [ $AC_STATUS -ne 1 -a ! -r "$AC_FLAG" ]; then
    alert "AC failed ($AC_STATUS)"
    touch "$AC_FLAG"
    logg "touch $AC_FLAG"
  elif [ $AC_STATUS -eq 1 -a -r "$AC_FLAG" ]; then
    alert "AC restored ($AC_STATUS)"
    rm "$AC_FLAG"
    logg "rm $AC_FLAG"
  fi

}

check_battery() {

  BATTERY_STATUS=$(cat $BATTERY_FILE 2>/dev/null | sed -e '/^POWER_SUPPLY_CAPACITY=/!d; s///')

  [ -z "$BATTERY_STATUS" ] && return 1

  if [ $BATTERY_STATUS -le $BATTERY_LOW -a ! -r "$BATTERY_FLAG" ]; then
    alert "BATTERY low ($BATTERY_STATUS)"
    touch "$BATTERY_FLAG"
    logg "touch $BATTERY_FLAG"
  elif [ $BATTERY_STATUS -ge $BATTERY_HIGH -a -r "$BATTERY_FLAG" ]; then
    alert "BATTERY full ($BATTERY_STATUS)"
    rm "$BATTERY_FLAG"
    logg "rm $BATTERY_FLAG"
  fi

}

check_transmission() {

  TORRENT_ID=$($TRANSMISSION_REMOTE -l | awk '/\*/ { print $1; exit }' | tr -d '*')

  [ -z "$TORRENT_ID" ] && return 0

  NAME=$($TRANSMISSION_REMOTE -t $TORRENT_ID -i | grep '  Name: ' | cut -d: -f2-)
  COMMENT=$($TRANSMISSION_REMOTE -t $TORRENT_ID -i | grep '  Comment: ' | cut -d: -f2-)
  echo -e "Torrent expired:\n\n$NAME\n$COMMENT" | mail -s "[transmission] Torrent expired" root

  $TRANSMISSION_REMOTE -t $TORRENT_ID -r >/dev/null 2>&1
  logg "TORRENT removed ($TORRENT_ID)"

}

if [ "$1" == 'cpu' -o $CPU_CHECK == 1 ]; then
  check_cpu
  if [ $? -gt 0 ]; then
    logg 'CPU: unknown status'
  fi
fi

if [ "$1" == 'ac' -o $AC_CHECK == 1 ]; then
  check_ac
  if [ $? -gt 0 ]; then
    logg "AC: unknown status"
  fi
fi

if [ "$1" == 'battery' -o $BATTERY_CHECK == 1 ]; then
  check_battery
  if [ $? -gt 0 ]; then
    logg "BATTERY: unknown status"
  fi
fi

if [ "$1" == 'transmission' -o $TRANSMISSION_CHECK == 1 ]; then
  check_transmission
  if [ $? -gt 0 ]; then
    logg "TRANSMISSION: unknown status"
  fi
fi

